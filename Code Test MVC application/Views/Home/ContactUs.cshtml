@model Contacts
@{
    ViewData["Title"] = "Contact Us";
}
<h4>Contact Us</h4>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="firstname" class="control-label"></label>
                <input asp-for="firstname" class="form-control" />
                <span asp-validation-for="firstname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="lastname" class="control-label"></label>
                <input asp-for="lastname" class="form-control" />
                <span asp-validation-for="lastname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="email" class="control-label"></label>
                <input asp-for="email" class="form-control" />
                <span asp-validation-for="email" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" onclick="ValidateEmail()"  />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        
        
    
    }
}
<script type="text/javascript">
function ValidateEmail() {
            var email = document.getElementById("txtEmail").value;
            var lblError = document.getElementById("lblError");
            lblError.innerHTML = "";
            var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            if (!expr.test(email)) {
                lblError.innerHTML = "Invalid email address.";
            }
        }
</script>